#=================================================
# https://github.com/lujimmy/openwrt-imagebuilder
# Description: Build OFFICAL OpenWrt using openwrt-imagebuilder with GitHub Actions
# Lisence: MIT
# Author: lujimmy
# Version:1.0
#=================================================
# 工作流程名称
name: Actions

on:
  release:
    types: published
  push:
    branches:
      - master
    # paths:
    #   - 'DIY.sh'
# 定时编译，不建议开启
#   schedule:
#    - cron: 0 8 * * 5
# 提交代码时不自动运行，点击右上角“star”后才开始编译
#  watch:
#    types: started

env:
# BUILDER_URL，openwrt-imagebuilder地址，可在http://downloads.openwrt.org/releases/找到对应版本，对应架构的openwrt-imagebuilder
  BUILDER_URL: https://downloads.openwrt.org/releases/19.07.7/targets/x86/64/openwrt-imagebuilder-19.07.7-x86-64.Linux-x86_64.tar.xz
# 默认不开启。运行到该步骤时，通过浏览器或终端复制提示的ssh连接登陆，如黑屏ctrl+c即可。进入openwrt目录，运行命令make menuconfig进行配置。配置完成保存为默认.config文件，ctrl+d，输入命令exit或logout即可继续后续步骤。
  SSH_ACTIONS: false
# 专属定制脚本  
  DIY_SH: DIY.sh
# 是否上传固件文件夹，默认否
  UPLOAD_BIN: false
# 是否上传固件文件夹，默认是
  UPLOAD_FIRMWARE: true
# 设置时区，默认上海
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: 拉取代码
      uses: actions/checkout@master
      
    - name: 准备环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install subversion build-essential libncurses5-dev zlib1g-dev gawk git ccache gettext libssl-dev xsltproc wget unzip python
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
    
    - name: 下载 OpenWrt-ImageBuilder
      run: |
        wget $BUILDER_URL
        tar -xf *.xz -C  ./ --strip-components 1

    # - name: SSH 连接 Actions
    #   uses: P3TERX/debugger-action@master
    #   if: env.SSH_ACTIONS == 'true'

    - name: 专属定制
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        chmod +x $DIY_SH
        ./$DIY_SH

# 编译时载入本仓库根目录自建文件夹files中的配置。例如，可在files下新建目录/etc/config/放入从路由/etc/config/备份的文件，编译时会写入路由的已有配置信息，更新后可开机无需设置，即可使用。
    - name: 编译固件
      id: compile
      run: |
        make image PACKAGES="luci luci-i18n-base-zh-cn luci-i18n-firewall-zh-cn -dnsmasq coreutils-nohup bash iptables dnsmasq-full curl jsonfilter ca-certificates ipset ip-full iptables-mod-tproxy iptables-mod-extra libcap ruby ruby-yaml kmod-tun ip6tables-mod-nat luci-compat luci-app-openclash luci-app-smartdns luci-i18n-smartdns-zh-cn luci-app-chinadns" FILES="files"
        echo "::set-output name=status::success"
    
    - name: 上传bin文件夹
      uses: actions/upload-artifact@master
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_directory
        path: bin

    - name: 整理文件
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
    
    - name: 上传固件文件
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}
